{"version":3,"sources":["img/bg_with_Land.png","components/Footer/index.js","components/Buildings/Level2.js","components/Buildings/Level1.js","components/Buildings/Level3.js","components/Buildings/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","style","backgroundImage","GrassOnLand","backgroundRepeat","width","bottom","height","position","Level2BuildingsStack","Level2Buildings","scrollPosition","left","Math","floor","Level1Buildings","Level3Buildings","Buildings","props","Level3","Level2","Level1","App","useState","setScrollPosition","onScroll","event","console","log","target","scrollTop","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e2c99bf0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg_with_Land.76805bc8.png\";","import React from \"react\";\nimport GrassOnLand from \"src/img/bg_with_Land.png\";\n\nconst Footer = () => {\n  return (\n    <div\n      className=\"footer\"\n      style={{\n        backgroundImage: `url(${GrassOnLand})`,\n        backgroundRepeat: \"repeat-x\",\n        width: \"100%\",\n        bottom: 0,\n        height: \"170px\",\n        position: \"absolute\"\n      }}\n    ></div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst Level2BuildingsStack = () => (\n  <>\n    <div className=\"building l2\" style={{ height: \"50vh\" }} />\n    <div className=\"building l2\" style={{ height: \"34vh\" }} />\n    <div className=\"building l2\" style={{ height: \"47vh\" }} />\n    <div className=\"building l2\" style={{ height: \"30vh\" }} />\n    <div className=\"building l2\" style={{ height: \"55vh\" }} />\n    <div className=\"building l2\" style={{ height: \"44vh\" }} />\n    <div className=\"building l2\" style={{ height: \"52vh\" }} />\n    <div className=\"building l2\" style={{ height: \"64vh\" }} />\n    <div className=\"building l2\" style={{ height: \"40vh\" }} />\n    <div className=\"building l2\" style={{ height: \"34vh\" }} />\n  </>\n);\n\nconst Level2Buildings = ({ scrollPosition = 0 }) => (\n  <div className=\"bldg-wrp layer-2\" style={{ left: `${Math.floor(scrollPosition / 5)}px` }}>\n    <Level2BuildingsStack />\n    <Level2BuildingsStack />\n    <Level2BuildingsStack />\n  </div>\n);\nexport default Level2Buildings;\n","import React from \"react\";\n\nconst Level1Buildings = () => {\n  return (\n    <div className=\"bldg-wrp layer-1\">\n      <div className=\"building l1\" style={{ height: \"60vh\" }} />\n      <div className=\"building l1\" style={{ height: \"50vh\" }} />\n      <div className=\"building l1\" style={{ height: \"34vh\" }} />\n      <div className=\"building l1\" style={{ height: \"40vh\" }} />\n      <div className=\"building l1\" style={{ height: \"45vh\" }} />\n      <div className=\"building l1\" style={{ height: \"60vh\" }} />\n      <div className=\"building l1\" style={{ height: \"40vh\" }} />\n      <div className=\"building l1\" style={{ height: \"50vh\" }} />\n      <div className=\"building l1\" style={{ height: \"45vh\" }} />\n      <div className=\"building l1\" style={{ height: \"55vh\" }} />\n      <div className=\"building l1\" style={{ height: \"40vh\" }} />\n      <div className=\"building l1\" style={{ height: \"50vh\" }} />\n      <div className=\"building l1\" style={{ height: \"60vh\" }} />\n      <div className=\"building l1\" style={{ height: \"55vh\" }} />\n    </div>\n  );\n};\n\nexport default Level1Buildings;\n","import React from \"react\";\n\nconst Level3Buildings = () => (\n  <>\n    <div className=\"building l3\" style={{ height: \"30vh\" }} />\n    <div className=\"building l3\" style={{ height: \"52vh\" }} />\n    <div className=\"building l3\" style={{ height: \"26vh\" }} />\n    <div className=\"building l3\" style={{ height: \"42vh\" }} />\n    <div className=\"building l3\" style={{ height: \"32vh\" }} />\n    <div className=\"building l3\" style={{ height: \"25vh\" }} />\n    <div className=\"building l3\" style={{ height: \"55vh\" }} />\n    <div className=\"building l3\" style={{ height: \"25vh\" }} />\n    <div className=\"building l3\" style={{ height: \"30vh\" }} />\n    <div className=\"building l3\" style={{ height: \"62vh\" }} />\n    <div className=\"building l3\" style={{ height: \"40vh\" }} />\n    <div className=\"building l3\" style={{ height: \"50vh\" }} />\n    <div className=\"building l3\" style={{ height: \"25vh\" }} />\n    <div className=\"building l3\" style={{ height: \"35vh\" }} />\n  </>\n);\n\nconst Level2Buildings = ({ scrollPosition = 0 }) => {\n  return (\n    <div className=\"bldg-wrp layer-3\" style={{ left: `${Math.floor(scrollPosition / 2)}px` }}>\n      <Level3Buildings />\n      <Level3Buildings />\n      <Level3Buildings />\n    </div>\n  );\n};\n\nexport default Level2Buildings;\n","import React from \"react\";\n\nimport Level2 from \"./Level2\";\nimport Level1 from \"./Level1\";\nimport Level3 from \"./Level3\";\n\nconst Buildings = ({ ...props }) => {\n  return (\n    <>\n      <Level3 {...props} />\n      <Level2 {...props} />\n      <Level1 {...props} />\n    </>\n  );\n};\n\nexport default Buildings;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport Footer from \"src/components/Footer\";\nimport Buildings from \"./components/Buildings\";\n\nfunction App() {\n  const [scrollPosition, setScrollPosition] = useState(0);\n\n  const scrollListener = event => {\n    console.log(\"scrollTop\", event.target.scrollTop);\n\n    setScrollPosition(event.target.scrollTop);\n  };\n\n  return (\n    <div className=\"App\" onScroll={scrollListener}>\n      <div className=\"outer-wrapper\">\n        <div className=\"wrapper\">\n          <Buildings style={{ position: \"absolute\", bottom: 0 }} scrollPosition={scrollPosition} />\n          <div className=\"slide\">\n            <h1>The work is in progess. Pls come back soon again</h1>\n          </div>\n          <Footer />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}